eureka:
  client:
    fetch-registry: true
    fetchRegistry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone: ${EUREKA_DEFAULTZONE}
   
  instance:
    healthCheckUrlPath: /coursera/health
    leaseExpirationDurationInSeconds: 2
    leaseRenewalIntervalInSeconds: 1
    statusPageUrlPath: /coursera/info
#    hostname : localhost

log4j2:
  contextSelector: org.apache.logging.log4j.core.async.AsyncLoggerContextSelector
catalinaBase: ${catalina.base}

spring:
  application:
    name: coursera-service
  jpa:
    properties:
      hibernate:
        use_sql_comments: 'true'
        format_sql: 'true'
        type: 'trace'
        current_session_context_class: org.springframework.orm.hibernate4.SpringSessionContext
    hibernate:
      ddl-auto: update
      use-new-id-generator-mappings: 'true'
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: 'false'
  datasource:
    password: ${mysql.datasource.password}
    driver-class-name: ${mysql.datasource.driver-class-name}
    username: ${mysql.datasource.username}
    url: ${mysql.datasource.url}/lti?useSSL=false
  thymeleaf:
    reactive:
      max-chunk-size: '8192'
  jmx:
    default-domain: coursera-service
  profiles:
    active: prod
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
  session:
    store-type: redis
security:
  basic:
    enabled: false
server:
  error:
    whitelabel:
      enabled: true
  servlet-path: /coursera